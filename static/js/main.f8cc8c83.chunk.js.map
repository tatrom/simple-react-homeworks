{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css"],"names":["module","exports","Message","props","className","style","container","avatar","src","alt","containerMessage","name","message","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","key","affairs","filterButton","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","classOfStyles","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","superInput","finalInputClassName","errorInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","setError","inputClass","input","AddUser","newName","trim","el","charCode","errorText","GreetingContainer","users","addUserCallback","setName","length","greetingContainer","alert","HW3","setUsers","newUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","test_button","Header","to","PreJunior","Routes","path","exact","render","HW5","console","log","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f8cc8c83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"test_button\":\"HW4_test_button__2hXrs\",\"container\":\"HW4_container__2LkSk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\",\"test_button\":\"SuperButton_test_button__1SmfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from \"react\";\nimport style from './Message.module.css'\n\ntype TypeOfMessage = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: TypeOfMessage) {\n    return (\n        <div className={style.container}>\n            <img className={style.avatar} src={props.avatar} alt=\"img\"/>\n            <div className={style.containerMessage}>\n                <div className={style.name}>\n                    {props.name}\n                </div>\n                <div className={style.message}>\n                    {props.message}\n                </div>\n                <div className={style.time}>\n                    {props.time}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Anna\",\n    message: \"Bla bla bla bla\",\n    time: \"08:00\"\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            {/*homeworks 1*/}\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n    debugger;\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\nimport s from './Affairs.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\n    return (\n        <div className={s.affair}>\n            title: {props.affair.name} priority: {props.affair.priority}\n            <SuperButton onClick={deleteCallback} className={s.button}>X</SuperButton>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React, {Dispatch, SetStateAction} from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport s from './Affairs.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div className={s.affairs}>\n\n            {mappedAffairs}\n\n            <SuperButton className={ s.filterButton} onClick={setAll}>All</SuperButton>\n            <SuperButton className={ s.filterButton} onClick={setHigh}>High</SuperButton>\n            <SuperButton className={ s.filterButton} onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton className={ s.filterButton} onClick={setLow}>Low</SuperButton>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\nexport type AffairPriorityType = {\n    priority: \"low\" | \"middle\" |\"high\"\n}\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type FilterType = \"all\" | \"high\" | \"middle\" | \"low\"\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === \"all\") return affairs\n    else return affairs.filter( affair => affair.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    const newAffairs = affairs.filter( affair => affair._id !== _id)\n    return  newAffairs\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    let classOfStyles: string;\n    // if ( className ) {\n    //     classOfStyles = className;\n    // } else {\n    //     classOfStyles = s.superInput\n    // }\n\n    className ? classOfStyles = className : classOfStyles = s.superInput\n    const finalInputClassName =  error === \"error\"? s.errorInput : classOfStyles; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, { KeyboardEvent, Dispatch, SetStateAction} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (name: string) => void\n    addUser: (name: string) => void\n    error: string\n    totalUsers: number\n    setError: Dispatch<SetStateAction<string>>\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, setError} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.input;\n\n\n\n    const AddUser = () => {\n        const newName = name.trim()\n        if (newName) {\n            addUser(newName)\n            setNameCallback(\"\")\n            setError(\"\");\n        } else {\n            setError(\"The input field is empty!\");\n        }\n    }\n    const OnClickHandler = () => {\n        AddUser()\n    }\n    const OnKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13) {\n            AddUser()\n        }\n    }\n    return (\n        <div>\n            {/*<input value={name}*/}\n            {/*       onChange={el => setNameCallback(el.currentTarget.value)}*/}\n            {/*       onKeyPress={OnKeyPressHandler}*/}\n            {/*       className={inputClass}/>*/}\n\n            <SuperInputText value={name}\n                            onChange={el => setNameCallback(el.currentTarget.value)}\n                            onKeyPress={OnKeyPressHandler}\n                            className={inputClass} />\n            <span className={s.errorText}>{error}</span>\n            <button className={s.button} onClick={OnClickHandler}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n\n}\n\nexport default Greeting;\n","import React, {useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\nimport s from './Greeting.module.css'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: string) => {\n        setName(e); // need to fix\n    };\n    const addUser = (name: string) => {\n        addUserCallback(name)\n        alert(`Hello, ${name} !`); // need to fix\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <div className={s.greetingContainer}>\n            <Greeting\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                error={error}\n                totalUsers={totalUsers}\n                setError={setError}\n            />\n        </div>\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n\n    const addUserCallback = (name: string) => {\n        let newUser: UserType = {_id: v1(), name: name}\n        let newUsers: Array<UserType> = [newUser, ...users]\n        setUsers(newUsers);\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        debugger;\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div className={s.container}>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    // red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                    className={s.test_button}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                     children element {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport {BrowserRouter, NavLink} from 'react-router-dom'\n\n\nfunction Header() {\n    return (\n        <BrowserRouter>\n        <div>\n            <NavLink to={\"/pre-junior\"}/>\n            // add NavLinks\n\n        </div>\n        </BrowserRouter>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction PreJunior() {\n\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport {Switch, Route, Redirect, BrowserRouter} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\"\n}\n\nfunction Routes() {\n\n    return (\n        <BrowserRouter>\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={\"/pre-junior\"}/>}/>\n\n            <Route path={\"pre-junior\"} render={() => <PreJunior/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            </Switch>\n        </div>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    console.log(\"hello roman\")\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n            cscscsc\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__HryGq\",\"affair\":\"Affairs_affair__179X1\",\"button\":\"Affairs_button__3YaQm\",\"filterButton\":\"Affairs_filterButton__20OYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\",\"input\":\"Greeting_input__2kXLu\",\"button\":\"Greeting_button__24QRF\",\"greetingContainer\":\"Greeting_greetingContainer__2YA-4\",\"errorText\":\"Greeting_errorText__1pVNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__3i1k0\",\"containerMessage\":\"Message_containerMessage__2AHCw\",\"avatar\":\"Message_avatar__3FT3j\",\"name\":\"Message_name__Tzmp0\",\"message\":\"Message_message__8WR15\",\"time\":\"Message_time__HOFTG\"};"],"sourceRoot":""}